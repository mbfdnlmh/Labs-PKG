### Отчет по лабораторной 1 "Конвертер цветовых моделей"

#### 1. **Общее описание**

Проект представляет собой **конвертер цветовых моделей**, позволяющий преобразовывать цветовые значения между моделями **RGB**, **XYZ** и **CMYK**. Это приложение разработано с использованием фреймворка **Qt** для создания графического интерфейса пользователя. В приложении реализованы текстовые поля для ввода значений цвета, ползунки для их изменения, а также кнопка для выбора цвета с помощью диалогового окна.

#### 2. **Цели и задачи проекта**

Цель:
- Создание приложения, позволяющего пользователю конвертировать цветовые значения между моделями **RGB**, **XYZ** и **CMYK**.

Задачи:
- Реализация алгоритмов для преобразования цветов между моделями.
- Динамическое обновление интерфейса на основе ввода пользователя.
- Обработка ошибок и предоставление визуальных уведомлений.

#### 3. **Реализованный функционал**

1. **Преобразование между моделями цветов**:
   - **RGB → XYZ**: Преобразует значения цвета из RGB в XYZ.
   - **RGB → CMYK**: Преобразует значения цвета из RGB в CMYK.
   - **XYZ → RGB**: Преобразует значения цвета из XYZ в RGB.
   - **XYZ → CMYK**: Преобразует значения цвета из XYZ в CMYK.
   - **CMYK → RGB**: Преобразует значения цвета из CMYK в RGB.
   - **CMYK → XYZ**: Преобразует значения цвета из CMYK в XYZ.

2. **Обновление интерфейса**:
   - Значения цветовых компонентов (RGB, XYZ, CMYK) обновляются через текстовые поля и ползунки.
   - Изменения одного значения автоматически приводят к пересмотру других значений и обновлению ползунков.

3. **Проверка значений**:
   - При вводе значений в текстовые поля для RGB, XYZ и CMYK проверяется их корректность.
   - В случае ошибки пользователю показывается предупреждающее сообщение.

4. **Выбор цвета**:
   - Кнопка "Выбрать цвет" открывает диалоговое окно для выбора цвета, который затем используется для обновления значений.

#### 4. **Технические характеристики**

- **Язык программирования**: C++.
- **Инструмент разработки**: Qt 5.15 (или более поздняя версия).
- **Платформа**: кроссплатформенная (Windows, Linux, macOS).

#### 5. **Выводы и рекомендации**

Проект успешно реализует основную задачу — преобразование цветов между моделями RGB, XYZ и CMYK. Интерфейс прост и удобен в использовании. Однако, для улучшения удобства работы можно добавить поддержку других цветовых моделей, а также расширить функционал для сохранения и загрузки выбранных цветов.

---

### Документация для проекта "Конвертер цветовых моделей"

#### 1. **Введение**

**Конвертер цветовых моделей** — это приложение для конвертации цветов между различными цветовыми моделями: **RGB**, **XYZ** и **CMYK**. Программа позволяет пользователю преобразовывать и визуализировать цвета, а также выбирать их с помощью диалогового окна.

#### 2. **Требования к системе**

- Операционная система: Windows, Linux, macOS.
- Требования: Qt 5.15 или выше, компилятор C++.
- Дополнительные библиотеки: QtCore, QtWidgets.

#### 3. **Структура проекта**

Проект состоит из следующих основных компонентов:

- **ColorConverterApp** — основное приложение, в котором происходит взаимодействие с пользователем.
- **Алгоритмы конвертации** — функции, выполняющие преобразование значений между моделями RGB, XYZ и CMYK.
- **Интерфейс пользователя** — графические элементы для ввода и вывода данных, а также кнопки для взаимодействия.

#### 4. **Описание классов и методов**

##### **Класс ColorConverterApp**

Этот класс реализует основное приложение, которое включает в себя следующие методы:

1. **Конструктор `ColorConverterApp(QWidget *parent)`**:
   - Инициализирует интерфейс, включая текстовые поля, ползунки и кнопку выбора цвета.

2. **Методы обработки изменений**:
   - `onRGBChanged()`, `onXYZChanged()`, `onCMYKChanged()`: Эти методы обрабатывают изменения в текстовых полях и конвертируют значения между цветовыми моделями.
   - `onSliderChanged()`: Обрабатывает изменения ползунков и обновляет соответствующие текстовые поля.
   - `onColorPickerClicked()`: Открывает диалог выбора цвета.

3. **Методы конвертации**:
   - `convertRGBToXYZ()`, `convertXYZToRGB()`, `convertRGBToCMYK()`, `convertCMYKToRGB()`: Эти методы реализуют конвертацию цветов между различными моделями.

4. **Методы для проверки значений**:
   - `checkAndAlertRGB()`, `checkAndAlertXYZ()`, `checkAndAlertCMYK()`: Проверяют введенные значения и выводят предупреждения, если значения выходят за допустимые пределы.

5. **Методы для обновления ползунков и фона**:
   - `updateSlidersFromRGB()`, `updateSlidersFromXYZ()`, `updateSlidersFromCMYK()`: Обновляют значения ползунков в зависимости от введенных значений.
   - `updateBackgroundColor()`: Изменяет цвет фона в соответствии с выбранным цветом.

#### 5. **Пример использования**

1. Пользователь запускает приложение.
2. В текстовые поля можно ввести значения для модели RGB (красный, зеленый, синий).
3. Программа автоматически конвертирует введенные значения в другие модели (XYZ и CMYK).
4. Также можно изменить значения с помощью ползунков, и программа обновит другие элементы интерфейса.
5. Кнопка "Выбрать цвет" позволяет выбрать цвет через стандартный диалог, который обновляет значения всех моделей.

#### 6. **Заключение**

Этот проект является примером применения Qt для создания пользовательских приложений с графическим интерфейсом. Реализованный конвертер цветовых моделей может быть полезен для специалистов в области дизайна, печати и других областях, где необходимо работать с цветами.
